parameters:
  cache_key: jose.opam |Â "$(OCAML_VERSION)"

steps:
- task: CacheBeta@1
  inputs:
    key: opam | $(Agent.OS) | ${{ parameters.cache_key }} 
    path: $(CACHE_FOLDER)
    cacheHitVar: CACHE_RESTORED
  displayName: '[Cache] opam'

- pwsh: Move-Item -Path $(CACHE_FOLDER)/_opam -Destination _opam
  displayName: '[Cache][Restore] Move downloaded cache in place'
  condition: eq(variables.CACHE_RESTORED, 'true')

- script: mkdir -p $(CACHE_FOLDER)
  displayName: '[Cache miss] Make cache dir'
  condition: ne(variables.CACHE_RESTORED, 'true')
- script: |
    wget https://github.com/ocaml/opam/releases/download/$(OPAM_VERSION)/$(OPAM_PKG)
    mv $(OPAM_PKG) $(CACHE_FOLDER)/opam
  displayName: '[Cache miss] Install opam'
  condition: ne(variables.CACHE_RESTORED, 'true')

- script: |
    sudo cp $(CACHE_FOLDER)/opam /usr/local/bin/opam
    sudo chmod a+x /usr/local/bin/opam
  displayName: Move opam in-place

- script: opam init -y --bare --disable-sandboxing --disable-shell-hook
  displayName: Init opam
- script: opam switch create . $(OCAML_VERSION) --no-install
  displayName: '[Cache miss] Create switch'
  condition: ne(variables.CACHE_RESTORED, 'true')
- script: eval `opam config env`
  displayName: eval opam switch
- script: |
    opam exec -- ocaml -version
    opam --version
  displayName: Check ocaml and opam version
- script: opam install -y --deps-only .
  displayName: Install depenencies
  condition: ne(variables.CACHE_RESTORED, 'true')

- script: opam exec -- dune build
  displayName: Build
# - script: opam exec -- dune exec test/test_exe/RunTests.exe
#   displayName: Test

- pwsh: Move-Item -Path _opam -Destination $(CACHE_FOLDER)/_opam
  displayName: '[Cache][Publish] Move builds to be cached'
